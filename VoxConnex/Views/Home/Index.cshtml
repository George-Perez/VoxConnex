
@model VoxConnex.Models.QuoteQuestionnaire
@*@model Student
    @{*@
@*ViewBag.Title = "Home Page";
    }*@
<!-- Navigation -->
<nav class="navbar navbar-expand-lg navbar-dark fixed-top" id="mainNav">
    <div class="container">
        <a class=" js-scroll-trigger" href="#page-top"></a>
        <img class="navbar-brand" src="~/img/VoxConnex Logo Green_White.png" />
        <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarResponsive">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item">
                    <a class="nav-link js-scroll-trigger" href="#about">About</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link js-scroll-trigger" href="#services">Services</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link js-scroll-trigger" href="#quote">Quote</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link js-scroll-trigger" href="#contact">Contact</a>
                </li>
            </ul>
        </div>
    </div>
</nav>
<header class="masthead text-center text-light d-flex">
    <div class="container my-auto">
        <div class="row">
            <div class="col-lg-8 mx-auto">
                <div class="typewriter">
                    <h2 class="typed">Solutions For Todays Small Business.</h2>
                </div>
                <p class="text-light mb-5">Offering taylored voice solutions to me the needs and budget of your business.</p>
                <a class="btn btn-outline-success btn-xl" data-toggle="modal" data-target=".bd-example-modal-lg" href="">Learn More</a>
            </div>
        </div>
    </div>
</header>

<section class="bg-vox" id="about">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto text-center">
                <h2 class="section-heading text-white">About VoxConnex</h2>
                <hr class="light my-4">
                <p class="text-faded mb-4">The VoxConnex product is our revolutionary voice paltform. With the advancments in interect connectivity we can leverage your internet connection to save you money and give you more features and functionality for your business. VoxConnex can be configured as a Hosted PBX, SIP trunks and a Virtual Phone System for the one man business. </p>
                <a class="btn btn-light btn-xl sr-button" href="#info">Learn More</a>
            </div>
        </div>
    </div>
</section>

<section id="info">
    <div class="container">
        <div class="text-left">
            <div><h2>What is Hosted PBX?</h2></div>
            <p>Hosted PBX (Private Branch Exchange) is the modern version of the traditional telephone closet. Today’s hosted, or “cloud,” model puts the brains of a phone closet into professionally maintained data centers, helping businesses transform their communications and improve productivity — without the need to purchase expensive, complex, depreciating phone system software and hardware.</p>
        </div>
        <div class="text-left">
            <div><h2>What is VoIP?</h2></div>
            <p>Voice over IP (VoIP) refers to phone services that are accessible through a high-quality broadband connection. VoIP is typically more cost effective and scalable than traditional alternatives. With both Hosted PBX and VoIP, our customers can work from the office, home, the road, or through their smartphone.</p>
        </div>
        <div class="text-left">
            <div><h2>What are the Benefits?</h2></div>
        
            <div class="container d-flex justify-content-around">
                <div class=" container">
                    <div class="text-left col">
                        <h3>Easy to Use & Operate</h3>
                        <p>VoxConnex Hosted PBX system is easy to setup and simple to use. We’ve thoroughly designed it to be user-friendly, while providing our Customers with the ability to customize as necessary — no experience required.</p>
                    </div>
                    <div class="text-left col">
                        <h3>Improved Saclability</h3>
                        <p>VoxConnex Hosted PBX doesn’t limit your business’ growth. With a hosted system, you’re able to scale up or down as needed, without the work, truck roles, or wait associated with traditional phone lines.</p>
                    </div>
                    <div class="text-left col">
                        <h3>Flexible & Future Proof</h3>
                        <p>With VoxConnex Hosted PBX, the office is anywhere you need it to be! Our customers can access and update their phone system as needed, whether they’re at home, traveling, or on vacation.</p>
                    </div>
                </div>
                <div class="container">
                    <div class="text-left col">
                        <h3>Fully Featured</h3>
                        <p>With VoxConnex Hosted PBX and VoIP you’re getting a feature-rich solution for your business or organization — complete with limitless call routing features and leading application integration, including Salesforce, Microsoft Outlook, and more.</p>
                    </div>
                    <div class="text-left col">
                        <h3>Save Money Upfront</h3>
                        <p>There are no heavy investments to getting started with VoxConnex Hosted PBX. That means customers don’t need to purchase or maintain a cumbersome telephone system for their business.</p>
                    </div>
                    <div class="text-left col">
                        <h3>Save Money Upfront</h3>
                        <p>VoxConnex Hosted PBX systems also cost less to maintain, lowering monthly phone bills, which makes the system a double threat for customers looking for a cheaper business phone solution that provides serious ROI.</p>
                    </div>
                </div>
            </div>
        </div>
</section>

<section id="services">
    <div class="container d-flex justify-content-center">
        <div class="row">
            <div class="col-lg-12 text-center">
                <h2 class="section-heading">Service Plans</h2>
                <hr class=" bg-vox my-4">
                <p>The VoxConnex product is our revolutionary voice paltform. With the advancments in interect connectivity we leverage your connection to save you time.</p>
            </div>
        </div>
    </div>
    <div class="card-deck mb-3 text-center col d-flex justify-content-center ">
        <div class="card mb-4 box-shadow   card-fixed-width transistion-up">
            <div class="card-header">
                <h4 class="my-0 font-weight-normal">SIP Trunk</h4>
            </div>
            <div class="card-body">
                <h1 class="card-title pricing-card-title">$16.95 <small class="text-muted">/ mo</small></h1>
                <ul class="list-unstyled mt-3 mb-4">
                    <li>1 DID Included</li>
                    <li>500 minutes</li>
                    <li>Disaster recoverey failover</li>
                    <li>Burst to more call paths ondemand <i class="fa fa-info-circle" title="*Minute overages billed at 3.9¢ per minute. Burstable SIP trunk billed at $4 surcharge plus cost of SIP trunk for that month."></i></li>

                </ul>
                <button type="button" class="btn btn-success btn-block" data-toggle="modal" data-target=".bd-example-modal-lg">Get Quote</button>
            </div>
        </div>
        <div class="card mb-4 box-shadow   card-fixed-width transistion-up">

            <div class="card-header">
                <h4 class="my-0 font-weight-normal">Std. PBX</h4>
            </div>
            <div class="card-body">
                <h1 class="card-title pricing-card-title">$19 <small class="text-muted">/ mo</small></h1>
                <ul class="list-unstyled mt-3 mb-4">
                    <li>20 users included</li>
                    <li>10 GB of storage</li>
                    <li>Priority email support</li>
                    <li>Help center access</li>
                </ul>
                <button type="button" class="btn btn-success btn-block" data-toggle="modal" data-target=".bd-example-modal-lg">Get Quote</button>
            </div>
        </div>
        <div class="card mb-4 box-shadow box card-fixed-width transistion-up">
            <div class="ribbon ribbon-top-right"><span>Most Popular</span></div>
            <div class="card-header bg-vox">
                <h4 class="my-0 font-weight-normal" id="mostPop">Pro PBX</h4>
            </div>
            <div class="card-body">
                <h1 class="card-title pricing-card-title">$29 <small class="text-muted">/ mo</small></h1>
                <ul class="list-unstyled mt-3 mb-4">
                    <li>30 users included</li>
                    <li>15 GB of storage</li>
                    <li>Phone and email support</li>
                    <li>Help center access</li>
                </ul>
                <button type="button" class="btn btn-success btn-block" data-toggle="modal" data-target=".bd-example-modal-lg">Get Quote</button>
            </div>
        </div>
        <div class="card mb-4 box-shadow card-fixed-width transistion-up">
            <div class="card-header">
                <h4 class="my-0 font-weight-normal">Virtual PBX</h4>
            </div>
            <div class="card-body">
                <h1 class="card-title pricing-card-title">$31 <small class="text-muted">/ mo</small></h1>
                <ul class="list-unstyled mt-3 mb-4">
                    <li>30 users included</li>
                    <li>15 GB of storage</li>
                    <li>Phone and email support</li>
                    <li>Help center access</li>
                </ul>
                <button type="button" class="btn btn-success btn-block" data-toggle="modal" data-target=".bd-example-modal-lg">Get Quote</button>
            </div>
        </div>
    </div>
</section>

<section id="quote" class="bg-dark text-white">
    <div class="container text-center ">
        <h2 class="typed mb-4">Get your custom voice quote today!</h2>
        <a class="btn btn-light btn-xl js-scroll-trigger sr-button" data-toggle="modal" data-target=".bd-example-modal-lg" href="" data-whatever="">Get Started!</a>
    </div>



    @*Start Modal*@
    <div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-xs-12 col-xl-12 form-box">
                            <form role="form" action="/QuoteQuestionnaires/Create" method="post" id="information-form" class="f1">
                                @*TITLE OF F1 FORM*@
                                @Html.AntiForgeryToken()
                                <h3>NEW QUOTE REQUEST</h3>
                                <p class="text-green">Fill in the form to build your quote</p>
                                <div class="f1-steps">
                                    <div class="f1-progress">
                                        <div class="f1-progress-line" data-now-value="16.66" data-number-of-steps="3" style="width: 16.66%;"></div>
                                    </div>
                                    <div class="f1-step active">
                                        <div class="f1-step-icon"><i class="fas fa-phone"></i></div>
                                        <p>New Number</p>
                                    </div>
                                    <div class="f1-step">
                                        <div class="f1-step-icon"><i class="fa fa-user"></i></div>
                                        <p>Users</p>
                                    </div>
                                    <div class="f1-step">
                                        <div class="f1-step-icon"><i class="fas fa-address-card"></i></div>
                                        <p>Contact</p>
                                    </div>
                                </div>

                                @*FIRST FIELD SET*@
                                <fieldset>
                                    <p class="text-green">@Html.LabelFor(model => model.NeedNumber, htmlAttributes: new { @class = "col d-flex justify-content-center extra-top-9" })</p>
                                    <div class="col d-flex justify-content-center">
                                        <div class="slider-frame btn-group-toggle">
                                            <label class="switch">
                                                @Html.EditorFor(model => model.NeedNumber)
                                                @*Don't worry about this warning. We're using the div here to call the slider function*@
                                                <div class="slider round" id="portnumber-toggle">
                                                    <div class="switch-btn">
                                                        <p id="no">no</p>
                                                        <p id="yes">yes</p>
                                                    </div>
                                                </div>
                                            </label>
                                        </div>
                                    </div>
                                    <div class="portnumber">
                                        @Html.LabelFor(model => model.HowManyNumbersPorting, htmlAttributes: new { @class = "text-green col d-flex justify-content-center extra-top-20" })
                                        <div class="col d-flex justify-content-center padding-top-bottom">
                                            <input class="form-control col text-center optional how-many-numbers-porting" style="max-width: 3rem; padding: 0;" id="howmanynumbersporting" name="HowManyNumbersPorting" type="number" value="">
                                            @*@Html.EditorFor(model => model.HowManyNumbersPorting, "Text", new { htmlAttributes = new { @class = "col text-center optional", @style = "max-width: 3rem; padding: 0;" } })*@
                                            <div class="valid-howmanynumbersporting">
                                                Thanks!
                                            </div>
                                            <div class="invalid-howmanynumbersporting">
                                                Please type in a valid amount.
                                            </div>
                                        </div>
                                    </div>
                                    <div class="f1-buttons modal-footer">
                                        <button type="button" class="btn f1-btn btn-next">Next</button>
                                    </div>
                                </fieldset>


                                @*SECOND FIELD SET*@
                                <fieldset>
                                    <p class="text-green">@Html.LabelFor(model => model.NeedPhones, htmlAttributes: new { @class = "col d-flex justify-content-center extra-top-9" })</p>
                                    <div class="col d-flex justify-content-center">
                                        <div class="slider-frame btn-group-toggle">
                                            <label class="switch">
                                                @Html.EditorFor(model => model.NeedPhones)
                                                @*Don't worry about the warning below this comment. We're using the div here to call the slider function*@
                                                <div class="slider round" id="portnumber-toggle2">
                                                    <div id="slider2">
                                                        <div class="switch-btn">
                                                            <p id="no2">no</p>
                                                            <p id="yes2">yes</p>
                                                        </div>
                                                    </div>
                                                </div>
                                            </label>
                                        </div>
                                    </div>
                                    @Html.LabelFor(model => model.HowManyUsers, htmlAttributes: new { @class = "text-green col d-flex justify-content-center extra-top-20" })
                                    <div class="col d-flex justify-content-center padding-top-bottom">
                                        <input class="form-control col text-center how-many-users" style="max-width: 3rem; padding: 0;" id="HowManyUsers" name="HowManyUsers" type="number" value="">
                                        @*@Html.EditorFor(model => model.HowManyUsers, "Text", new { htmlAttributes = new { @class = "col text-center how-many-users", @style = "max-width: 3rem; padding: 0;" } })*@
                                        <div class="valid-tooltip">
                                            Thanks!
                                        </div>
                                        <div class="invalid-tooltip">
                                            Please type in a valid amount.
                                        </div>
                                    </div>
                                    <div class="f1-buttons modal-footer">
                                        <button type="button" class="btn btn-previous">Previous</button>
                                        <button type="button" class="btn f1-btn btn-next btn-next2">Next</button>
                                    </div>
                                </fieldset>


                                @*THIRD FIELD SET*@
                                <fieldset>
                                    <div class="row">
                                        <div class="form-group text-green col-md-12">
                                            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })
                                            <input class="form-control col text-left textfield-0 company-name" id="companyname" name="CompanyName" type="text" value="">
                                            @*@Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control textfield-0" } })*@
                                            <div class="valid-companyname">
                                                Thanks!
                                            </div>
                                            <div class="invalid-companyname">
                                                Please type a company name.
                                            </div>

                                        </div>
                                        <div class="form-group text-green col-md-12">
                                            @Html.LabelFor(model => model.ContactName, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })

                                            <input class="form-control col text-left textfield-1 contact-name" id="contactname" name="ContactName" type="text" value="">
                                            @*@Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control textfield-1", @placeholder = "First and last name", @Value = "valuePlaceholder" } })*@
                                            <div class="valid-contactname">
                                                Thanks!
                                            </div>
                                            <div class="invalid-contactname">
                                                Please type your first and last name.
                                            </div>
                                        </div>

                                        <div class="form-group  text-green col-md-6">
                                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })
                                            <input class="form-control col text-left textfield-2 phone" id="phone" name="Phone" type="number" value="">
                                            @*@Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control text-green textfield-2", @placeholder = "Contact number", @Value = "" } })*@
                                            <div class="valid-phone">
                                                Thanks!
                                            </div>
                                            <div class="invalid-phone">
                                                Please enter a valid phone number.
                                            </div>

                                        </div>
                                        <div class="form-group text-green col-md-6">
                                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })
                                            <input class="form-control col text-left textfield-3 emailinfo" id="emailinfo" name="EmailInfo" type="email" value="">
                                            @*@Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control text-green textfield-3", @Value = "mail@example.com" } })*@
                                            <div class="valid-emailinfo">
                                                Thanks!
                                            </div>
                                            <div class="invalid-emailinfo">
                                                Please enter a valid email address.
                                            </div>
                                        </div>
                                        <div class="form-group text-green col-md-6">
                                            @Html.LabelFor(model => model.Street1, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })

                                            @*@Html.EditorFor(model => model.Street1, new { htmlAttributes = new { @class = "form-control textfield-4", @placeholder = "Street name", @Value = "valuePlaceholder" } })*@
                                            <input class="form-control col text-left textfield-4 street1" id="street1" name="Street1" type="text" value="">
                                            <div class="valid-street1">
                                                Thanks!
                                            </div>
                                            <div class="invalid-street1">
                                                Please enter a valid address.
                                            </div>
                                        </div>
                                        <div class="form-group text-green col-md-6">
                                            @Html.LabelFor(model => model.Street2, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })
                                            @Html.EditorFor(model => model.Street2, new { htmlAttributes = new { @class = "form-control" } })
                                        </div>
                                        <div class="form-group text-green col-md-6">
                                            @Html.LabelFor(model => model.CityName, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })
                                                @*@Html.EditorFor(model => model.CityName, new { htmlAttributes = new { @class = "form-control textfield-5", @placeholder = "City", @Value = "valuePlaceholder" } })*@
                                                <input class="form-control col text-left textfield-5 cityname" id="cityname" name="CityName" type="text" value="">
                                                <div class="valid-cityname">
                                                    Thanks!
                                                </div>
                                                <div class="invalid-cityname">
                                                    Please enter a city.
                                                </div>
                                            </div>
                                        <div class="form-group text-green col-md-6 ">
                                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })

                                            @* I'm trying to add the states as a dropdown list. I'll work on it tonight. *@
                                            @*@Html.DropDownListFor(model => model.State, new SelectList(Enum.GetValues(typeof(USStates))), "Select State")*@
                                            @*@Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", @placeholder = "State" } })*@
                                            @Html.DropDownList("States", new List<SelectListItem>
                {
                new SelectListItem{ Text="", Value = "" },
                new SelectListItem{ Text="Alabama", Value = "Alabama" },
                new SelectListItem{ Text="Alaska", Value = "Alaska" },
                new SelectListItem{ Text="Arizona", Value = "Arizona" },
                new SelectListItem{ Text="Arkansas", Value = "Arkansas" },
                new SelectListItem{ Text="California", Value = "California" },
                new SelectListItem{ Text="Colorado", Value = "Colorado" },
                new SelectListItem{ Text="Connecticut", Value = "Connecticut" },
                new SelectListItem{ Text="District of Columbia", Value = "District of Columbia" },
                new SelectListItem{ Text="Delaware", Value = "Delaware" },
                new SelectListItem{ Text="Florida", Value = "Florida" },
                new SelectListItem{ Text="Georgia", Value = "Georgia" },
                new SelectListItem{ Text="Hawaii", Value = "Hawaii" },
                new SelectListItem{ Text="Idaho", Value = "Idaho" },
                new SelectListItem{ Text="Illinois", Value = "Illinois" },
                new SelectListItem{ Text="Indiana", Value = "Indiana" },
                new SelectListItem{ Text="Iowa", Value = "Iowa" },
                new SelectListItem{ Text="Kansas", Value = "Kansas" },
                new SelectListItem{ Text="Kentucky", Value = "Kentucky" },
                new SelectListItem{ Text="Louisiana", Value = "Louisiana" },
                new SelectListItem{ Text="Maine", Value = "Maine" },
                new SelectListItem{ Text="Maryland", Value = "Maryland" },
                new SelectListItem{ Text="Massachusetts", Value = "Massachusetts" },
                new SelectListItem{ Text="Michigan", Value = "Michigan" },
                new SelectListItem{ Text="Minnesota", Value = "Minnesota" },
                new SelectListItem{ Text="Mississippi", Value = "Mississippi" },
                new SelectListItem{ Text="Missouri", Value = "Missouri" },
                new SelectListItem{ Text="Montana", Value = "Montana" },
                new SelectListItem{ Text="Nebraska", Value = "Nebraska" },
                new SelectListItem{ Text="Nevada", Value = "Nevada" },
                new SelectListItem{ Text="New Hampshire", Value = "New Hampshire" },
                new SelectListItem{ Text="New Jersey", Value = "New Jersey" },
                new SelectListItem{ Text="New Mexico", Value = "New Mexico" },
                new SelectListItem{ Text="New York", Value = "New York" },
                new SelectListItem{ Text="North Carolina", Value = "North Carolina" },
                new SelectListItem{ Text="North Dakota", Value = "North Dakota" },
                new SelectListItem{ Text="Ohio", Value = "Ohio" },
                new SelectListItem{ Text="Oklahoma", Value = "Oklahoma" },
                new SelectListItem{ Text="Oregon", Value = "Oregon" },
                new SelectListItem{ Text="Pennsylvania", Value = "Pennsylvania" },
                new SelectListItem{ Text="Rhode Island", Value = "Rhode Island" },
                new SelectListItem{ Text="South Carolina", Value = "South Carolina" },
                new SelectListItem{ Text="South Dakota", Value = "South Dakota" },
                new SelectListItem{ Text="Tennessee", Value = "Tennessee" },
                new SelectListItem{ Text="Texas", Value = "Texas" },
                new SelectListItem{ Text="Utah", Value = "Utah" },
                new SelectListItem{ Text="Vermont", Value = "Vermont" },
                new SelectListItem{ Text="Virginia", Value = "Virginia" },
                new SelectListItem{ Text="Washington", Value = "Washington" },
                new SelectListItem{ Text="West Virginia", Value = "West Virginia" },
                new SelectListItem{ Text="Wisconsin", Value = "Wisconsin" },
                new SelectListItem{ Text="Wyoming", Value = "Wyoming" },
                }, new { @class = "form-control state" })
                                            <div class="valid-state">
                                                Thanks!
                                            </div>
                                            <div class="invalid-state">
                                                Please select a state.
                                            </div>

                                        </div>
                                        <div class="form-group text-green col-md-4 ">
                                            @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "p-0 m-0 control-label col-md-12" })

                                            @*@Html.EditorFor(model => model.Zipcode, "Text", new { htmlAttributes = new { @class = "form-control textfield-6", @placeholder = "Zipcode", @Value = "valuePlaceholder" } })*@
                                            <input class="form-control col text-left textfield-6 zipcode" id="zipcode" name="Zipcode" type="text" value="">
                                            <div class="valid-zipcode">
                                                Thanks!
                                            </div>
                                            <div class="invalid-zipcode">
                                                Please enter a valid zipcode.
                                            </div>
                                        </div>
                                        <div class="custom-control text-green custom-checkbox col-md-12">

                                            <div class="custom-control-indicator text-green"></div>
                                            @Html.CheckBoxFor(model => model.AcceptTerms, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AcceptTerms, "", new { @class = "text-danger" })
                                            <span>By clicking the box you consent to receiving calls and e-mails from Visual Network Solutions regarding products and services at the number and e-mail address provided.</span>
                                        </div>

                                        <div class="form-group col-md-12">
                                            <div class="f1-buttons modal-footer">
                                                <button type="button" class="btn btn-previous">Previous</button>
                                                <button type="submit" form="information-form" value="Submit" class="btn btn-submit">Submit</button>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*End Modal*@
</section>

<section class="get-quote" id="quote-creator" style="display:none">
    <iframe src="http://localhost:50375/QuoteQuestionnaires/Create" style="width:100%; height: 25rem;"></iframe>
</section>

<section id="contact">
    <div class="container">
        <div class="row">
            <div class="col-lg-8 mx-auto text-center">
                <h2 class="section-heading">Let's Get In Touch!</h2>
                <hr>
                <p class="mb-5">Ready to start your next project with us? That's great! Give us a call or send us an email and we will get back to you as soon as possible!</p>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4 ml-auto text-center sr-contact">
                <i class="fa fa-phone fa-3x mb-3"></i>
                <p>210-233-9880</p>
            </div>
            <div class="col-lg-4 ml-auto text-center sr-contact">
                <i class="fa fa-compass fa-3x mb-3"></i>
                <p>4115 Medical Dr <br />San Antonio,Texas 78229</p>
            </div>
            <div class="col-lg-4 mr-auto text-center sr-contact">
                <i class="fa fa-envelope fa-3x mb-3"></i>
                <p>
                    <a href="mailto:vns-office@visolutions.net">info@visolutions.net</a>
                </p>
            </div>
        </div>
    </div>
</section>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script>

    $(document).ready(function () {
        $('#portnumber-toggle').click(function () {
            if ($('.portnumber').css('visibility') == 'hidden') {
                $('.portnumber').css('visibility', 'visible');
                $('#yes').css('visibility', 'visible');
                $('#no').css('visibility', 'hidden');
                $('#howmanynumbersporting').removeClass('optional');
            }
            else {
                $('.portnumber').css('visibility', 'hidden');
                $('#no').css('visibility', 'visible');
                $('#yes').css('visibility', 'hidden');
                $('#howmanynumbersporting').addClass('optional');
            }
        });


        $('#portnumber-toggle2').click(function () {
            if ($('#yes2').css('visibility') == 'hidden') {
                $('#yes2').css('visibility', 'visible');
                $('#no2').css('visibility', 'hidden');
            }
            else {
                $('#no2').css('visibility', 'visible');
                $('#yes2').css('visibility', 'hidden');
            }
        });


        function myFunction() {
            var x = document.getElementById("quote-creator");
            if (x.style.display === "block") {
                x.style.display = "none";
            } else {
                x.style.display = "block";
            }
        }
    });
</script>

<script>
    $(function () {
        $(document).tooltip();
    });
</script>